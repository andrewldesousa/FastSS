Around a month ago I posted [here](https://www.reddit.com/r/learnpython/comments/bv5etg/my_first_python_project_command_line_application/) my first GitHub repository ever with simple command line application for selective file copying.

Couple of days ago I finally created the first release on [GitHub](https://github.com/pltnk/selective_copy/releases/tag/v0.1.0) and published it on [PyPI](https://pypi.org/project/slcp/0.1.0/)!

&#x200B;

[This is how my code looked like a month ago.](https://github.com/pltnk/selective_copy/commit/15ea88663f97b00fc83b82639e5793b89ae30f69) 

[And here it is now.](https://github.com/pltnk/selective_copy/blob/6ca00871de8f8c84d8f7b0bbc00337702202e969/slcp.py)

You can check changes comparison between initial upload on GitHub and current version [here](https://github.com/pltnk/selective_copy/compare/master@%7B05-30-2019%7D...cc99368fe1c88e2b5d0c6d526147626f878a4f93?diff=split) by clicking 'Files changed' tab.

[Commit history.](https://github.com/pltnk/selective_copy/commits/dfd5a9e5ecc2bf3e2614a72388de2fdc8bf68f1e)

And now you can install my application via `pip install slcp`

&#x200B;

As you can see my code went through significant changes. Firstly I implemented more effective logging system using logging module. Initially I used just a list where log was stored and saved to the file at the end of the program. But this way a log could be lost if the program crashes. Then I changed my error checking system and made it more precise. At first it checked only one case and moreover it did it wrong :) The most challenging task was to redesign the main functions for files copying. Since I have a progress bar I needed to know total number of files copied before actually copying them. This way os.walk function was called two times: when counting total and copying files. Also there were two copy functions one of them allowed to preserve source folder structure and the other doesn't. Thanks to /u/fernly from the comments of the previous thread I made one function that calls os.walk and make a to-do list for copying adding a sublist for each file with source and destiation paths. The len of this to-do list is the total number of files to copy that can be used in progress bar printing. Then I left only one copy function instead of two which takes that to-do list as an argument. Also I added some small features like adaptive progress bar that takes into account width of the terminal and couple of new arguments for command line parser. All of significant changes in the code can be seen as merged pull requests in the commit history. 

Last time I received very valuable feedback regarding architecture of the program that really helped me to make my code better, so I want to thank this community and all the people who spend their own time to answer questions. 

While working on this project I've learned how to use argparse, logging, os.path, os.walk and poetry. I made myself familiar with git and learned a lot about packaging, versioning, licensing and using markdown for readme files formatting.

Of course there is always a room for improvement so all feedback will be highly appreciated. As a next step I intend to finally write some tests, if somebody knows the best way to do it for such a program please let me know.

Working on your own project is the best way to learn indeed, good luck with your learning, have fun and don't ever hesitate to ask questions!