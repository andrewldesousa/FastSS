Hi all, 

Firstly this is going to be a long post to hopefully help people genuinely looking to commit to becoming a developer by sharing my story of how I went from absolutely zero knowledge of programming (as you can see by my post history) to landing my first python developer role.

Location: UK

To kick things off about a year ago I wasnt happy with the job(s) I was doing, long hours, very low pay, so I came across python by chance. Yes I admit the money was what attracted me alone to start off with as I am quite a money motivated person. Ofcourse I knew and still know it will be a long journey to reach the salaries offered but I have managed to finally get my first step on the ladder by landing a job as a python developer. Enough of the story, lets get on with it.

I will list all of the youtube playlists and channels I watched over and over again. 
Bear in mind whilst reading these books I did watch a lot of videos in between reading aswell!
What books I read, in order. 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

First book:

Python Crash Course: A Hands-On, Project-Based Introduction to Programming - Eric Matthes
Review: Great first book, my advice, skip the game and django project and just do the matplotlib project for now (come back to django later down the line once you understand the HTTP protocol and how requests work)

10/10 recommend

p.s. I know a lot of people recommend reading Automate the boring stuff and I regret not reading it after this one!

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Book 2:

Learning python - Mark Lutz
Review: Very good book for getting a grasp on python fundamentals. I would not of read this without first reading Python crash course. You will need to supplement this book with looking up videos on youtube for a deeper understanding as this book is very dry to read and long! 1400 pages! I found a pdf format online for free to read. Don't need to buy it.

10/10 recommend (supplement with videos)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Book 3:

Programming Python - Mark Lutz
Review: Very good book. I would not read this book word for word. Skim through the book to get an understanding. I would ignore following the projects in the book. Don't spend too much time on it. (Ignore tkinter chapters)

6/10 = Would I read again? Its worth having on your computer to refer to IMO. - You can find this online for free in pdf. 1300 pages.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

From here on I pretty much decided after researching jobs and where the demand was for python developers, that I was going to learn django and learn the web based side of things from here on out.

Most of this from here on is django specific so if you want to learn python for data science or another area you may want to use this as a template and just change the books and videos to meet your needs. O'reilly has a bunch of books on python, there are also so many videos on youtube to help aswell.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Before you jump into django / flask wouldn't it be best to learn how the internet works first? Learn from my mistakes and learn this first before django!

https://www.youtube.com/watch?v=e4S8zfLdLgQ&list=PLLy4MeON3hKCtMvu4yA-DKRG_gsgRR1jM&index=45&t=0s
I believe from memory there is also a part 2.

Learn what the http protocol is, learn how requests are sent to a server, learn the difference between GET, POST, PUT, DELETE.

Learnt that? Great, lets move on.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Resource - https://wsvincent.com/

Book 4:

Django for beginners - WS Vincent
Review: Absolutely great first book for learning django! I would highly reccomend also following https://www.djangoproject.com/start/ alongside this book to get you started.

10/10 - This is a must read imo.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Book 5:

I keep hearing the words API, and REST, wtf are they?

Have no fear my friend!
Watch this first - https://www.youtube.com/watch?v=Q-BpqyOT3a8

REST APIs with Django - WS Vincent
Review: Great book to learn how to use Django REST API and how it works. 
8/10 would recommend, however it isnt a very big book and I felt the book wasn't great value for money, I felt at this point I was starting to ask questions in my own mind when reading code on how things could be implemented and expanded on and I felt this book could of had a bit more detail rather than just pointing to external resources. 
However this book does get you going on how to use django REST and sets you up nicely to learn more advanced material.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

At this point I was starting to consider when I would be ready to start applying to jobs. 
Start jotting down ideas for any small projects you want to make, for myself it was an REST API app showing CRUD functionality, and a working django website.

I learned basic HTML and CSS to have a better understanding of how templates work and how objects / data is sent from the backend and displayed in the front end and vice versa.

HTML/CSS series - https://www.youtube.com/playlist?list=PL0eyrZgxdwhwNC5ppZo_dYGVjerQY3xYU

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

You're still here? Congrats!

I had done a lot of reading and hearing about data structures and algorithms and how you needed a computer science degree to learn it. 

Book 6 - Cracking the coding interview - Gayle Laakmann McDowell
Review: What to say about this book? Wow, this book was a massive learning curve for me! Considering most days I was spending 6-8 hours committed to learning, some days I would only manage to get through half a page. This book took me 6-8 weeks to go through from memory. All of the examples are in Java so I had to look up corresponding tests in python and reverse engineer to see what was going on.

10/10 This is an absolute must read for anyone. Buy it, read it, understand it, stick it on your shelf, read it again in the future.

Videos to supplement - https://www.udacity.com/course/data-structures-and-algorithms-in-python--ud513
Cracking the coding interview book also has a corresponding video course on youtube by the author, this helps a lot!

https://runestone.academy/runestone/books/published/pythonds/index.html - this is also a fantastic resource in python!

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ahh yes, I think I'm ready to apply for roles! Slow down there young spud! We are not finished!

Test Driven Development - Harry Percival

https://www.obeythetestinggoat.com/book/bibliography.html#seceng

Review: MUST READ, MUST READ. No excuses, get it done, go through it twice, follow the projects, every single interview will involve questions about TDD!

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

From here I wanted to have a better understanding of the internet. So I read:

Computer networking: A top down approach

https://github.com/arasty/books/blob/master/0.Computer%20Networking%20-%20A%20Top-Down%20Approach%20(6th%20Edition).pdf

Review: If you do want a better understanding of the internet / networking then skim through this book. As soon as you understand http protocol, TCP/IP, then close the book and move on.

6/10 - Not a must read, but nice to know!

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

From here on I didn't read any other books. Most of my time was spent creating my projects to put in a portfolio, watching more videos, getting confused and solving my own problems by building a site using django and learning along the way, and reading the official django documentation.

To keep it short and sweet from here on out I am just going to list the youtubers who truly helped me out, technically and also keeping my motivations high!

https://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g - Corey Schafer - 10/10, not going to list any other independent python tutorials, this guy is all you need!
https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ - FreeCodeCamp - Fantastic resource, so much on here, only watch what you need to learn, dont get caught up in trying to learn everything the channel has to offer.

The two channels above are all I would recommend for video resources. Freecodecamp also does a good SQL for beginners which is worth watching for any developer.

Other channels 10/10 worth checking out

https://www.youtube.com/channel/UCZ9qFEC82qM6Pk-54Q4TVWA - Andy Sterkowitz
https://www.youtube.com/channel/UCu1xbgCV5o48h_BYCQD7KJg - Chris Sean (my personal favorite)

Traversymedia and thenewboston are both great channels as well for a slightly different way of explaining things if you truly do get stuck.

Interviews:

So after I made a few projects and uploaded them to my github, I put the github link on my CV aswell. I made a linkedin profile aswell.

You may experience a bucket load of recruiters contacting you if you have set up a new linkedin.

My tips for dealing with recruiters (based on my own mistakes):

- Always tell them what you are looking for, DO NOT let them push you forward for a role or arrange interviews on your behalf for roles you are not comfortable with. 
- If they are aggressive and abusive (yes I have had this), simply hang up the phone, block their number and move on. 
- Tell them "I am looking for a junior python role using django ONLY or similar framework" (ofcourse you can edit this to your area of knowledge)
- I had so many phone calls I stopped accepting calls as over 50% of calls were roles that were too senior for me or calls about roles I had already applied/spoken about. I set a voicemail up telling them to email me and I will get back to them. Take this advice please, it will save you repeating yourself 20 times a day.
- You have had an email about a job role? They will usually want to speak to you on the phone first, however I learned to reply along the lines of "please understand I get contacted frequently by many recruiters, please can you send over a job spec for me to look over prior to arranging a call".
This works majority of the time, if they don't reply, trust me you haven't lost out!
- They may ask you on the phone "Where have you already applied for?" Be confident and simply reply "I would rather not say", hold your ground, its your own business, not theirs, if they have a role for a company to put to you then lets hear it, be respectful and polite but don't let them push you around, many will try to!
- They have told you on the phone about a company you have already applied for? "Sorry I am already engaged with that company" they will press you on this "With who? How long ago? What stage are you on?" Once again, simply say "I would rather not say" I have never had a recruiter push me after I have responded that way.
- Salary "What are your salary expectations?" "What salary are you on at the moment?" My advice? Simply reply "Well, what does the role pay?" Its as simple as that, if a company cant be open and honest about what the salary range is for a junior level role are they even worth wasting your time on? Your current salary is nobodies business, your answer: "I would rather not say"

If you apply directly to a company through their own website / indeed or any similar jobsite they may ask for salary expectations. I did put in salary expectations for my current job when I applied directly. So just know when to do it and when not to. Applying directly with a good cover letter has most of the time netted me a positive response.

If you have got this far I have no doubt you can become a developer. Yes I am only junior. It has been a long road for me and the learning curve has been insane. I have gone for weeks on end sometimes thinking I am not getting anywhere and wondering when the end will come. You are not alone. Its a small sacrifice in the long term if you truly want to make this your career.

Interviews:

If you manage to land a phone call and/or a face to face interview here are my tips:

- Do not put anything on your CV you do not know in detail. It is easy to expose in a technical interview. 99% of the time questions will be about your CV.
- What do you know about the company? Why do you want to work here? Do your research, I usually tried to memorize 2-3 things in reasonable detail about the company, it shows a good interest in them.
Go on their website, read what they do, learn it, memorize, think "Why would I want to work here?" answer that with a good answer and you should be good to go.
- Dress smart! Yes they may wear tshirt and jeans to work. You do not work there yet. Business dress all the time! Shirt, tie, suit if you can! (EDIT: I am in the UK, business dress based on my own work experience in the UK is standard for most jobs, if you are unsure of dress code ask your potential employer prior to interview as I don't want to mislead anyone)
- Be friendly, polite, act keen (not desperate)
- "Would you like a drink of coffee/water before we start" the answer to this is YES PLEASE! You will need that water to sip on when your mouth goes dry! haha! I've been there!
- Trouble answering a question? Relax, pause, and just say "let me think one moment", if you don't know the answer, just say "I don't know the answer" its good to be honest, I have always had a good response by being honest when I have not known the answer! 

I hope this post will help you if you are struggling to find a path. I wish you all the best and good luck!

TLDR: If you want to change your life. Read it.