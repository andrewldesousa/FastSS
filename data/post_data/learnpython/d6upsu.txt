We see this question pop up from time to time.  I had an experience at work today that I think exemplifies the answer to this question. I work as an IT tutor for a local college and thus I handle the intro to programming classes. So I had an appointment today.

The student was having trouble with their assignment. 

Okay, no biggie. Everyone has trouble with something. So we get to work. 

 The assignment is to build a program that prompts the user for the  measurement of the radius of a circle, performs the calculation to  determine the area of a circle with that radius, and display said area.  the instructions even include code to import the python math library,  assign a value from the Pi function of said library, and the formula  Pi(r)\^2.

I look at their program.

They have imported Math.  
They have Pi assigned to a variable.  
They have a variable asking the user for a number  
They have a variable named "area" currently set to '100'.  
They have a print statement to cast the value of area to a string, and then print said value.

Notice what they don't have? Yeah, any point where the area is  calculated. Now if this was just a case of they hadn't worked with basic  geometry in 5 years I could just let it go. Sometimes people just need a  reminder of what "Pi(r)\^2" does, or what Pi is and it's relevance to  circles. But no, not this individual. 

When I was working with them to understand this, they asked why they needed to know it when the computer should do all that work.

So as far as the 'Do I need to know math to be a programmer?' question, I think this is a perfect example of  while you don't need to know advanced mathematics to be a programmer,  you do need to be able to deconstruct a problem and understand what  needs to be done to solve it. That is the foundational concept of  mathematics.