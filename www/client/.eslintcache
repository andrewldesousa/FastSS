[{"/usr/src/app/src/reportWebVitals.js":"1","/usr/src/app/src/App.js":"2","/usr/src/app/src/index.js":"3"},{"size":362,"mtime":1608379906943,"results":"4","hashOfConfig":"5"},{"size":1538,"mtime":1608667580171,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1608379906943,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kxfgd1",{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/src/reportWebVitals.js",[],"/usr/src/app/src/App.js",["15","16","17","18","19"],"import React, { useState, useEffect } from 'react';\nimport { Widget, addResponseMessage, toggleWidget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\n\nvar headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nvar dataString = 'grant_type=client_credentials&client_id=amzn1.application-oa2-client.5fd93d0246974f7ab35acf7f3570cc37&client_secret=e2cacfecc71b0781269fc9f62fb5f23b3e86b945361ab06a92721d996036a6fd&scope=alexa:skill_messaging';\n\nvar options = {\n    url: 'https://api.amazon.com/auth/o2/token',\n    method: 'POST',\n    headers: headers,\n    body: dataString\n};\n\nfunction callback(error, response, body) {\n    if (!error && response.statusCode == 200) {\n        console.log(body);\n    }\n}\n\n\n\nfunction App() {\n  const [widgetOpen, setWidgetOpen] = useState(false);\n  \n  useEffect(() => {\n\ttoggleWidget();\n\t\n\tfetch('http://localhost:5000/fast-synonym', {\n\t\tmode: 'cors',\n\t\turl: 'http://localhost:5000',\n\t\tmethod: 'POST',\n\t\theaders: headers,\n\t\tbody: dataString\n\t})\n\n\n\t//ResponseMessage(r.response.outputSpeech.ssml)\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message from user -> ${newMessage}`);\n    addResponseMessage('New message incomig!');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n        fullScreenMode={true}\n        showCloseButton={false}\n        title={'Alexa App'}\n        subtitle={'I have a few skills to share with you.'}\n      />\n    </div>\n  ); \n}\n\nexport default App;\n","/usr/src/app/src/index.js",[],{"ruleId":"20","severity":1,"message":"21","line":12,"column":5,"nodeType":"22","messageId":"23","endLine":12,"endColumn":12},{"ruleId":"20","severity":1,"message":"24","line":19,"column":10,"nodeType":"22","messageId":"23","endLine":19,"endColumn":18},{"ruleId":"25","severity":1,"message":"26","line":20,"column":39,"nodeType":"27","messageId":"28","endLine":20,"endColumn":41},{"ruleId":"20","severity":1,"message":"29","line":28,"column":10,"nodeType":"22","messageId":"23","endLine":28,"endColumn":20},{"ruleId":"20","severity":1,"message":"30","line":28,"column":22,"nodeType":"22","messageId":"23","endLine":28,"endColumn":35},"no-unused-vars","'options' is assigned a value but never used.","Identifier","unusedVar","'callback' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'widgetOpen' is assigned a value but never used.","'setWidgetOpen' is assigned a value but never used."]